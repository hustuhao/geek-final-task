// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"dataproducer/internal/conf"
	"dataproducer/internal/data"
	"dataproducer/internal/job"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(server *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	client := data.NewEsClient(confData)
	dataData, cleanup, err := data.NewJobData(client)
	if err != nil {
		return nil, nil, err
	}
	orderJobRepo := data.NewOrderJobRepo(dataData, logger)
	consumerGroup, err := data.NewKafkaConsumeGroup(confData)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	saramaConsumerJobServer := job.NewJobServer(orderJobRepo, confData, consumerGroup)
	app := newApp(logger, saramaConsumerJobServer)
	return app, func() {
		cleanup()
	}, nil
}
